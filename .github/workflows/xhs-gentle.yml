name: xhs-gentle

on:
  workflow_dispatch:
    inputs:
      max_items:
        description: "每个关键词最多抓取多少条（测试用）"
        required: false
        default: "5"
  # 如需定时再打开
  # schedule:
  #   - cron: "15 7 * * *"

jobs:
  crawl-and-ingest:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install uv
        run: pip install -U uv

      # ★ 关键：先创建 venv，再装依赖（requirements 里记得加 supabase）
      - name: Create venv & install deps
        run: |
          uv venv
          uv pip install -r requirements.txt

      - name: Install Playwright (with system deps)
        run: uv run python -m playwright install --with-deps

      - name: Install xvfb
        run: sudo apt-get update && sudo apt-get install -y xvfb

      - name: Restore cookie file from secret
        env:
          XHS_COOKIES_B64: ${{ secrets.XHS_COOKIES_B64 }}
        run: |
          echo "$XHS_COOKIES_B64" | base64 -d > $RUNNER_TEMP/xhs_cookies.json
          test -s $RUNNER_TEMP/xhs_cookies.json
          echo "Cookie head preview:"
          head -n 5 $RUNNER_TEMP/xhs_cookies.json
      
      - name: Verify proxy works
        env:
          XHS_PROXY_URL: ${{ secrets.XHS_PROXY_URL }}          # 可留空
          XHS_PROXY_ENDPOINT: ${{ secrets.XHS_PROXY_ENDPOINT }}# 例如 1.2.3.4:15818
          XHS_PROXY_USER: ${{ secrets.XHS_PROXY_USER }}
          XHS_PROXY_PASS: ${{ secrets.XHS_PROXY_PASS }}
        run: |
          echo "Check proxy…"
          cat > check_proxy.py <<'PY'
      import os, requests
      url = os.environ.get("XHS_PROXY_URL", "").strip()
      hp  = os.environ.get("XHS_PROXY_ENDPOINT", "").strip()
      usr = os.environ.get("XHS_PROXY_USER", "").strip()
      pwd = os.environ.get("XHS_PROXY_PASS", "").strip()
      if not url:
          if hp and usr and pwd:
              url = f"http://{usr}:{pwd}@{hp}"
          elif hp:
              url = f"http://{hp}"
      if not url:
          print("No proxy configured; skip.")
          raise SystemExit(0)
      proxies = {"http": url, "https": url}
      print("Proxy:", url[:12] + "***")
      r = requests.get("https://api.ipify.org?format=json", proxies=proxies, timeout=20)
      r.raise_for_status()
      print("Egress IP:", r.json().get("ip"))
      PY
          uv run python check_proxy.py


      - name: Gentle crawl (localized env + proxy)
        env:
          XHS_COOKIES_PATH: ${{ runner.temp }}/xhs_cookies.json
          XHS_SAVE: sqlite
          XHS_LOGIN_TYPE: cookie
          PW_CHROMIUM_NO_SANDBOX: 1
          # 你的本机指纹
          XHS_UA: "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/126.0.0.0 Safari/537.36"
          XHS_LOCALE: "en-US"
          XHS_TIMEZONE: "America/New_York"
          # 代理（任选其一：URL 或三段式）
          XHS_PROXY_URL: ${{ secrets.XHS_PROXY_URL }}              # 可留空
          XHS_PROXY_ENDPOINT: ${{ secrets.XHS_PROXY_ENDPOINT }}    # 填 IP:PORT
          XHS_PROXY_USER: ${{ secrets.XHS_PROXY_USER }}
          XHS_PROXY_PASS: ${{ secrets.XHS_PROXY_PASS }}
          MAX_ITEMS: ${{ github.event.inputs.max_items }}
        run: |
          xvfb-run -a uv run python tools/run_with_env.py


      - name: Ingest to Supabase
        if: success()
        env:
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
        run: |
          uv run python ingest_to_supabase.py

      # 可选：把 sqlite 产物打包下载，便于验证
      - name: Upload sqlite artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: sqlite_tables
          path: schema/sqlite_tables.db
          if-no-files-found: ignore
