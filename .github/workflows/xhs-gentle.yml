name: xhs-gentle

on:
  workflow_dispatch:
    inputs:
      max_items:
        description: "每个关键词最多抓取多少条（测试用）"
        required: false
        default: "5"

jobs:
  crawl-and-ingest:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install uv
        run: pip install -U uv

      - name: Create venv & install deps
        run: |
          uv venv
          uv pip install -r requirements.txt

      - name: Install Playwright (with system deps)
        run: uv run python -m playwright install --with-deps

      - name: Install xvfb
        run: sudo apt-get update && sudo apt-get install -y xvfb

      - name: Restore cookie file from secret
        env:
          XHS_COOKIES_B64: ${{ secrets.XHS_COOKIES_B64 }}
        run: |
          echo "$XHS_COOKIES_B64" | base64 -d > $RUNNER_TEMP/xhs_cookies.json
          test -s $RUNNER_TEMP/xhs_cookies.json

      # ★ 新增：从快代理 API 动态提取一个 IP
      - name: Fetch proxy IP from KDL API
        id: fetch_proxy
        run: |
          uv run python <<'PY'
          import requests, os, sys
          api = "https://dps.kdlapi.com/api/getdps"
          params = {
              "secret_id": "oy9f5410vku9p0a2jxpj",
              "signature": "4n7d07j8v1oyaxvlv08e36o5p3zh2odw",
              "num": 1,
          }
          resp = requests.get(api, params=params, timeout=10)
          txt = resp.text.strip()
          print("KDL response:", txt)
          if ":" not in txt:
              print("Failed to fetch proxy:", txt)
              sys.exit(1)
          ip_port = txt.splitlines()[0].strip()
          with open(os.environ["GITHUB_ENV"], "a") as f:
              f.write(f"XHS_PROXY_ENDPOINT={ip_port}\n")
          PY

      - name: Gentle crawl (localized env + proxy)
        env:
          XHS_COOKIES_PATH: ${{ runner.temp }}/xhs_cookies.json
          XHS_SAVE: sqlite
          XHS_LOGIN_TYPE: cookie
          PW_CHROMIUM_NO_SANDBOX: 1
          XHS_UA: "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/126.0.0.0 Safari/537.36"
          XHS_LOCALE: "en-US"
          XHS_TIMEZONE: "America/New_York"
          XHS_PROXY_ENDPOINT: ${{ env.XHS_PROXY_ENDPOINT }}
          MAX_ITEMS: ${{ github.event.inputs.max_items }}
        run: |
          xvfb-run -a uv run python tools/run_with_env.py

      - name: Ingest to Supabase
        if: success()
        env:
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
        run: |
          uv run python ingest_to_supabase.py

      - name: Upload sqlite artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: sqlite_tables
          path: schema/sqlite_tables.db
          if-no-files-found: ignore
